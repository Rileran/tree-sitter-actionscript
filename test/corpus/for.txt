==============
for assignment
==============

for (i = 0; i < 10; i++) {

}

---


(program
    (for_statement
        (expression_statement 
            (assignment_expression (identifier) (number))
        )
        (expression_statement
            (binary_expression (identifier) (number))
        )
        (update_expression (identifier))
        (statement_block)
    )
)



========================
for variable declaration
========================

for (var i = 0; i < 10; i++) {

}

---

(program
    (for_statement
        (identifier)
        (number)
        (expression_statement
            (binary_expression (identifier) (number))
        )
        (update_expression (identifier))
        (statement_block)
    )
)

======================================
for variable declaration with type int
======================================

for (var i: int = 0; i < 10; i++) {

}

---

(program
    (for_statement
        (identifier)
        (type_hint (identifier))
        (number)
        (expression_statement
            (binary_expression (identifier) (number))
        )
        (update_expression (identifier))
        (statement_block)
    )
)

============
infinite for
============

for (;;) {

}

---


(program
    (for_statement
        (empty_statement)
        (empty_statement)
        (statement_block)
    )
)

===========================
for with multiple increment
===========================

for(var symbol:int = 0; symbol < n; ++h.count[length[symbol]],symbol++) {

}

---

(program
    (for_statement
        (identifier)
        (type_hint (identifier))
        (number)
        (expression_statement
            (binary_expression (identifier) (identifier))
        )
        (sequence_expression
            (update_expression
                (subscript_expression
                    (member_expression (identifier) (identifier))
                    (subscript_expression (identifier) (identifier))
                )
            )
            (update_expression (identifier))
        )
        (statement_block)
    )
)

=============================
for with multiple initializer
=============================

for(var _loc13_:int = 0,var _loc14_:* = data.fightTeams; §§hasnext(_loc14_,_loc13_); alignUris.push(alignUri)) {

}

---

(program
    (for_statement
        (identifier)
        (type_hint (identifier))
        (number)
        (identifier)
        (type_hint (any_type))
        (member_expression (identifier) (identifier))
        (expression_statement
            (call_expression (identifier) (identifier) (identifier))
        )
        (call_expression
            (member_expression (identifier) (identifier))
            (identifier)
        )
        (statement_block)
    )
)
